#ifndef GRAPHICS_TEXTURERENDER_H
#define GRAPHICS_TEXTURERENDER_H

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <Config.h>
#include <Graphics/Color.h>
#include <Game/Index.h>

////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////
#define RENDER_SIZE_WIDTH			704		// 22 * 32
#define RENDER_SIZE_HEIGHT			544		// 17 * 32

////////////////////////////////////////////////////////////
/// Render a grh from index
// (without color and rect specification)
////////////////////////////////////////////////////////////
void TextureRenderGrh(Int32 GrhID, Int32 X, Int32 Y);

////////////////////////////////////////////////////////////
/// Render a grh from index with alpha specification
// (without rect specification)
////////////////////////////////////////////////////////////
void TextureRenderGrhA(Int32 GrhID, Int32 X, Int32 Y, UInt8 Alpha);

////////////////////////////////////////////////////////////
/// Render a grh from index with color specification
// (without rect specification)
////////////////////////////////////////////////////////////
void TextureRenderGrhColor(Int32 GrhID, Int32 X, Int32 Y, struct Color4ub * Color);

////////////////////////////////////////////////////////////
/// Render a grh from index with color specification
// (repeating it in all rect)
////////////////////////////////////////////////////////////
void TextureRenderGrhColorRepeat(Int32 GrhID, Int32 Left, Int32 Top, Int32 Right, Int32 Bottom, struct Color4ub * Color);

////////////////////////////////////////////////////////////
/// Render a grh from pointer
// (without color and rect specification)
////////////////////////////////////////////////////////////
void TextureRenderGrhPtr(struct GrhData * Grh, Int32 X, Int32 Y);

#endif // GRAPHICS_TEXTURERENDER_H