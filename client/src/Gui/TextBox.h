#ifndef GUI_TEXTBOX_H
#define GUI_TEXTBOX_H

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <Config.h>

////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////
#define GUI_TEXTBOX_BACKGROUND			0x5C76
#define GUI_TEXTBOX_HBORDER				0x5C77
#define	GUI_TEXTBOX_VBORDER				0x5C79
#define	GUI_TEXTBOX_EDGE				0x5C7B

#define GUI_TEXTBOX_NOT_SELECTED		-1
#define GUI_TEXTBOX_LENGTH				0xFF

////////////////////////////////////////////////////////////
// Member data
////////////////////////////////////////////////////////////
struct GuiTextBox
{
	UInt32	CurrentPos;		///< Current position
	UInt32	StartOffset;	///< Rendering offset
	Int32	SelectionPos;	///< Current selection position
	bool	HideText;		///< If it is true, we show '*' instead of text
};

////////////////////////////////////////////////////////////
// Widget include
////////////////////////////////////////////////////////////
#include <Gui/Widget.h>

////////////////////////////////////////////////////////////
// Create a textbox
////////////////////////////////////////////////////////////
struct GuiWidget * GuiTextBoxCreate(Int32 X, Int32 Y, Int32 Length, UInt32 FontSize, char * Text, bool Hide);

////////////////////////////////////////////////////////////
// Create a textbox by default
////////////////////////////////////////////////////////////
struct GuiWidget * GuiTextBoxCreateDefault();

////////////////////////////////////////////////////////////
// Clears the selection (not erase)
////////////////////////////////////////////////////////////
void GuiTextBoxClearSelection(struct GuiWidget * Widget);

////////////////////////////////////////////////////////////
// Erase the selection
////////////////////////////////////////////////////////////
void GuiTextBoxEraseSelection(struct GuiWidget * Widget);

////////////////////////////////////////////////////////////
// Set the selection
////////////////////////////////////////////////////////////
void GuiTextBoxSetSelection(struct GuiWidget * Widget, UInt32 Start, UInt32 CurPos);

////////////////////////////////////////////////////////////
// Copy the textbox selection
////////////////////////////////////////////////////////////
void GuiTextBoxCopySelection(struct GuiWidget * Widget);

////////////////////////////////////////////////////////////
// Cut the textbox selection
////////////////////////////////////////////////////////////
void GuiTextBoxCutSelection(struct GuiWidget * Widget);

////////////////////////////////////////////////////////////
// Paste the textbox copy
////////////////////////////////////////////////////////////
void GuiTextBoxPasteSelection(struct GuiWidget * Widget);

////////////////////////////////////////////////////////////
// Add character
////////////////////////////////////////////////////////////
void GuiTextBoxAddChar(struct GuiWidget * Widget, Int8 Char);

////////////////////////////////////////////////////////////
// Remove character
////////////////////////////////////////////////////////////
void GuiTextBoxRemoveChar(struct GuiWidget * Widget);

////////////////////////////////////////////////////////////
// Set cursor position
////////////////////////////////////////////////////////////
void GuiTextBoxSetCurrentPos(struct GuiWidget * Widget, Int32 Position);

////////////////////////////////////////////////////////////
// Render a textbox
////////////////////////////////////////////////////////////
void GuiTextBoxRender(struct GuiWidget * Form, struct GuiWidget * Widget, struct Color4ub * Color, bool Focused);

#endif // GUI_TEXTBOX_H
