#ifndef SYSTEM_PACK_H
#define SYSTEM_PACK_H

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <Config.h>

////////////////////////////////////////////////////////////
// Data structures
////////////////////////////////////////////////////////////
struct PackHeader
{
	char UniqueID[7];	///< Unique ID to know if this file is from this class
	char Version[6];	///< File version to check integrity
	UInt32 FileCount;	///< Number of files that there are in the pack
};

struct PackFile
{
	Int32 Index;		///< ID of file data
	Int32 Size;			///< Size of file data
	Int32 Offset;		///< Where the file is
};

////////////////////////////////////////////////////////////
// Methods
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
/// Get the file path depending on the file type with index
////////////////////////////////////////////////////////////
char * PackGetFilePath(char * FilesPath, Int32 FileIndex);

////////////////////////////////////////////////////////////
/// Create a new pack
////////////////////////////////////////////////////////////
bool PackSaveData(char * PackPath, char * FilesPath, Int32 FilesSize);

////////////////////////////////////////////////////////////
/// Extract all data from pack
////////////////////////////////////////////////////////////
bool PackExtractData(char * PackPath, char * ExtractPath);

////////////////////////////////////////////////////////////
/// Load file data with index to array
////////////////////////////////////////////////////////////
bool PackLoadData(char * PackPath, UInt32 FileIndex, UInt8 **Data, Int32 * Size);

#endif // SYSTEM_PACK_H
